# SermonAudio Updater Configuration
# Copy this to config.yaml and update with your settings

# SermonAudio API credentials
api_key: "your-api-key-here"
broadcaster_id: "your-broadcaster-id"

# LLM Configuration
llm:
  # Primary LLM settings
  primary:
    provider: "ollama"  # Options: "ollama", "openai"
    ollama:
      host: "http://localhost:11434"
      model: "llama3"
    openai:
      api_key: "your-openai-key"
      model: "gpt-3.5-turbo"
      # base_url: "https://api.openai.com/v1"  # Optional: Custom endpoint for xAI, Anthropic, etc.
  
  # Fallback LLM settings (used if primary fails)
  fallback:
    enabled: true
    provider: "openai"  # Options: "ollama", "openai"
    ollama:
      host: "http://localhost:11434"
      model: "llama2"
    openai:
      api_key: "your-fallback-openai-key"
      model: "gpt-3.5-turbo"
      # base_url: "https://api.openai.com/v1"  # Optional: Custom endpoint for xAI, Anthropic, etc.
  
  # Validation LLM settings (smaller model for description validation)
  validator:
    enabled: true
    provider: "ollama"  # Options: "ollama", "openai"
    ollama:
      host: "http://localhost:11434"
      model: "gemma2:2b"  # Smaller, faster model for validation
    openai:
      api_key: "your-openai-key"
      model: "gpt-4o-mini"  # Smaller OpenAI model for validation
      # base_url: "https://api.openai.com/v1"  # Optional: Custom endpoint

# Audio Processing Settings
use_audacity: false  # Set to true if Audacity with mod-script-pipe is available
audio_enhancement_method: "deepfilternet"  # Options: "deepfilternet", "resemble_enhance", "none"
audio_noise_reduction: true
audio_amplify: true
audio_normalize: true
audio_gain_db: 0.5
audio_target_level_db: -22.0

# Processing Options
dry_run: false  # Set to true to preview changes without updating
debug: false    # Set to true to enable verbose debug output
hashtag_verification: true  # Set to true to verify hashtags through a second LLM pass (recommended)

# Output Settings
output_directory: "processed_sermons"  # Directory to store processed sermon files (relative to script or absolute path)
save_original_audio: true  # Save the original downloaded audio file alongside processed audio
save_transcript: true  # Save the sermon transcript as a text file alongside other outputs

# Metadata Processing Settings
metadata_processing:
  enabled: true  # Enable metadata processing (descriptions and hashtags)
  process_audio: true  # Whether to process audio (can be overridden by CLI)
  description:
    update_if_missing: true  # Update only if null/empty
    update_if_minimal: true  # Update if less than min_length_threshold chars
    force_update: false     # Update even if substantial content exists
    min_length_threshold: 50  # Characters to consider "minimal"
    validation:
      enabled: true  # Enable description validation with smaller model
      criteria:
        - "Contains specific theological content or Bible references"
        - "Mentions the speaker's main message or key points"
        - "Is written in a professional, engaging style"
        - "Avoids generic Christian phrases without substance"
        - "Has clear application or takeaway for listeners"
  hashtags:
    update_if_missing: true  # Update only if null/empty  
    update_if_minimal: true  # Update if less than min_length_threshold chars
    force_update: false     # Update even if substantial content exists
    min_length_threshold: 10  # Characters to consider "minimal"

# Default search criteria
default_criteria:
  event_type: "sunday_service"  # Options: sunday_service, sunday_school, midweek_service
  date_range: 7  # Days back from today
